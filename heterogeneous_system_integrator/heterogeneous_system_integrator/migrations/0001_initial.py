# Generated by Django 4.2 on 2024-04-09 15:22

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Connection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField()),
                ('slug', models.SlugField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('type', models.CharField(choices=[('db', 'Database'), ('ftp', 'FTP / FTPS / SFTP'), ('rest', 'API REST')])),
                ('hostname', models.CharField(help_text='www.host_site.com or 192.168.0.1')),
                ('port', models.IntegerField(help_text='5432', null=True)),
                ('username', models.CharField(blank=True)),
                ('password', models.CharField(blank=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Filter',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField()),
                ('slug', models.SlugField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('field_name', models.CharField(help_text='The field name which value is subject of comparison')),
                ('comparison_operator', models.CharField(choices=[('==', 'Equal'), ('>', 'Greater than'), ('>=', 'Greater than or equal to'), ('in', 'In'), ('<', 'Less than'), ('<=', 'Less than or equal to'), ('!=', 'Not equal'), ('nin', 'Not in')])),
                ('comparison_value', models.CharField(help_text='The value that is going to be compared with.')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Mapping',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField()),
                ('slug', models.SlugField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('origin_field_name', models.CharField()),
                ('destination_field_name', models.CharField()),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Subtask',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField()),
                ('slug', models.SlugField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Conversion',
            fields=[
                ('filter_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='heterogeneous_system_integrator.filter')),
                ('conversion_value', models.CharField(help_text='The new value that is going to receive the field if the comparison is true.')),
            ],
            options={
                'abstract': False,
            },
            bases=('heterogeneous_system_integrator.filter',),
        ),
        migrations.CreateModel(
            name='TransformStep',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField()),
                ('slug', models.SlugField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('mappings', models.ManyToManyField(related_name='transform_steps', to='heterogeneous_system_integrator.mapping')),
                ('conversion', models.ManyToManyField(related_name='transform_steps', to='heterogeneous_system_integrator.conversion')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TransferStep',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField()),
                ('slug', models.SlugField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('connection', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='transfer_steps', to='heterogeneous_system_integrator.connection')),
                ('filter', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='transfer_steps', to='heterogeneous_system_integrator.filter')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Task',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField()),
                ('slug', models.SlugField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('execute_at', models.DateTimeField(null=True)),
                ('execute_every_period', models.CharField(help_text='Format to indicate periods -> Minute[0-59] Hour[0,23] Day[1-31] Month[1-12] Week[0-6](0=Sunday). Syntax guide:\n            -Use a space to separate each field.\n            -Use a comma to separate multiple values.\n            -Use a hyphen to designate a range of values.\n            -Use an asterisk as a wildcard to include all possible values.', null=True)),
                ('stop_at', models.DateTimeField(help_text='From that point on the task is not going to be executed anymore.', null=True)),
                ('subtasks', models.ManyToManyField(related_name='tasks', to='heterogeneous_system_integrator.subtask')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='subtask',
            name='download_steps',
            field=models.ManyToManyField(related_name='subtasks_download', to='heterogeneous_system_integrator.transferstep'),
        ),
        migrations.AddField(
            model_name='subtask',
            name='transform_step',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='subtasks', to='heterogeneous_system_integrator.transformstep'),
        ),
        migrations.AddField(
            model_name='subtask',
            name='upload_step',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='subtasks_upload', to='heterogeneous_system_integrator.transferstep'),
        ),
    ]
